apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'
apply from: '../config/jenkins.gradle'
apply from: '../config/quality.gradle'
apply plugin: 'spoon'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    compileOptions {
        encoding "UTF-8"
    }

    defaultConfig {
        applicationId "com.mercandalli.android.apps.files"
        minSdkVersion 10
        targetSdkVersion 23
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true
        //testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.mercandalli.android.apps.files.FileSpaceJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            versionNameSuffix ".dev"
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        // uiAutomator : https://code.google.com/p/android/issues/detail?id=195331
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }
}

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

spoon {

    // Enable debug output
    debug = true

    // Set custom test reports directory (defaults to "spoon")
    baseOutputDir = file("$buildDir/spoon-custom-report-dir")

    // Enable setting test class/method-to-be-run from command line. E.g.:
    // $> ../gradlew spoonFreeDebugTest -PspoonClassName=com.stanfy.spoon.example.test.MainActivityTest -PspoonMethodName=testSetText
    if (project.hasProperty('spoonClassName')) {
        className = project.spoonClassName

        if (project.hasProperty('spoonMethodName')) {
            methodName = project.spoonMethodName
        }
    }

    // You can pass instrumentation arguments. Tests in this example assert this pair is passed.
    instrumentationArgs = ["foo=bar"]

    // It's also possible to configure tests sharding using convenient properties:
    // numShards = 2
    // shardIndex = 0

    adbTimeout = 30
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':shared')

    compile 'com.android.support:appcompat-v7:23.2.0'
    compile 'com.android.support:design:23.2.0'
    compile 'com.android.support:recyclerview-v7:23.2.0'
    compile 'com.android.support:cardview-v7:23.2.0'
    compile 'com.android.support:palette-v7:23.2.0'
    compile 'com.android.support:support-annotations:23.2.0'
    compile 'com.android.support:mediarouter-v7:23.2.0'
    compile 'com.romainpiel.shimmer:library:1.4.0@aar'
    compile 'com.google.android.gms:play-services-cast:8.4.0'
    compile 'com.google.android.gms:play-services-analytics:8.4.0'
    compile 'com.google.android.gms:play-services-ads:8.4.0'
    compile 'com.google.android.gms:play-services-wearable:8.4.0'
    compile 'com.google.android.gms:play-services-identity:8.4.0'
    compile 'com.google.android.gms:play-services-gcm:8.4.0'
    compile 'com.google.android.gms:play-services-plus:8.4.0'
    compile 'com.google.android.gms:play-services-maps:8.4.0'
    compile 'com.google.android.gms:play-services-auth:8.4.0'

    //CircleImageView
    compile 'de.hdodenhof:circleimageview:2.0.0'

    //Dagger
    compile 'com.google.dagger:dagger:2.0.2'
    apt 'com.google.dagger:dagger-compiler:2.0.2'

    //Network
    compile('com.squareup.retrofit2:retrofit:2.0.0-beta4') {
        // exclude Retrofitâ€™s OkHttp peer-dependency module and define your own module import
        exclude module: 'okhttp'
    }
    compile 'com.squareup.okhttp3:okhttp:3.0.0'
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.5.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.0.1'

    //Audio
    compile 'org.jaudiotagger:jaudiotagger:2.0.1'

    //Other
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'org.glassfish:javax.annotation:10.0-b28'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }

    // Testing-only dependencies
    androidTestCompile 'com.android.support:support-annotations:23.2.0'
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test:rules:0.4.1'
    androidTestCompile 'com.squareup.spoon:spoon-client:1.3.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2.1'
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2.1') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'

    wearApp project(':wearable')
}

apply plugin: 'com.google.gms.google-services'